name: ApiBot CD

on:
  push:
    branches: [main]

jobs:
  check-unit-tests:
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: mysite.settings
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Requirements
        run: pip3 install -r requirements.txt
      - name: Run Tests
        env:
          APP_ENV: ${{ env.APP_ENV }}
          SECRET_KEY: ${{ env.SECRET_KEY }}
          API_ID: ${{ env.API_ID }}
          API_HASH: ${{ env.API_HASH }}
          BOT_TOKEN: ${{ env.BOT_TOKEN }}
          POSTGRES_ENGINE: ${{ env.POSTGRES_ENGINE }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ env.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ env.POSTGRES_PORT }}
  
        run: python3 manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: check-unit-tests
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: root
        key: ${{ secrets.KEY }} # private key and it must be authorized. Authorization process that authorized_keys the key includes public key, copy public key and add to authorized_keys
        script: |
          cd api/
          git pull origin main
          source env/bin/activate
          python3 manage.py migrate
          sudo systemctl restart gunicorn
          sudo systemctl restart nginx
          sudo systemctl restart celery
